#include<reg51.h>
#include<intrins.h>
#define GPIO_GIP P1

sbit LSA = P2^2;
sbit LSB = P2^3;
sbit LSC = P2^4;

typedef unsigned char u8;
typedef unsigned int u16;

u8 code light[] = {0x3f, 0x06, 0x5b, 0x4f, 0x66, 0x6d, 0x7d, 0x07, 0x7f, 0x6f};
u8 my_display[8];

unsigned long second;
unsigned long frequence;

void delay(u16 i)
{
	while(i--);
}

void Init_Interrupt()
{
	TMOD |= 0x51;	//timer0 set moode 1, counter set mode 1;

	TL0 = 0x3C;
	TH0 = 0xB0;	   // delay 50ms

	EA = 1;	 // the final interrupt
	ET0 = 1;
	ET1 = 1;	// the timer0 and count1 interrupt
	
	TR0 = 1;
	TR1 = 1;


}

void Display()
{
	u8 i = 0;
	for(i = 0; i < 8; i++)
	{
		switch(i)
		{
						case(0):
				LSA=0;LSB=0;LSC=0; break;//???0?
			case(1):
				LSA=1;LSB=0;LSC=0; break;//???1?
			case(2):
				LSA=0;LSB=1;LSC=0; break;//???2?
			case(3):
				LSA=1;LSB=1;LSC=0; break;//???3?
			case(4):
				LSA=0;LSB=0;LSC=1; break;//???4?
			case(5):
				LSA=1;LSB=0;LSC=1; break;//???5?
			case(6):
				LSA=0;LSB=1;LSC=1; break;//???6?
			case(7):
				LSA=1;LSB=1;LSC=1; break;//???7?

		}
		GPIO_GIP = my_display[i];
		delay(10);
		GPIO_GIP = 0x00;
	}
}


void main()
{
	Init_Interrupt();
	while(1)
	{
		if(TR0 == 0)
		{
			frequence += TL1;
			frequence += TH1 * 256;

			my_display[6] = light[frequence % 10000000 / 100000];
			my_display[5] = light[frequence % 1000000 / 100000];
			my_display[4] = light[frequence % 100000 / 10000];
			my_display[3] = light[frequence % 10000 / 1000];
			my_display[2] = light[frequence % 1000 / 1000];
			my_display[1] = light[frequence % 100 / 10];
			my_display[0] = light[frequence % 10];

			/*recount the number*/
			TH1 = 0x00;
			TL1 = 0x00;
	
			frequence = 0;
			TR0 = 1;
			TR1 = 1;


		}
		Display();

	}
}

void timer0() interrupt 1
{
	TL0 = 0x3C;
	TH0 = 0xB0;

	second++;
	if(second == 20)
	{
		second = 0;
		TR0 = 0;
		TR1 = 0;
	}
}

void timer1() interrupt 3
{
	  frequence += 65535;
}


